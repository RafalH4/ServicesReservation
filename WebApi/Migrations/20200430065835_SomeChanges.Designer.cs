// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.DataContext;

namespace WebApi.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20200430065835_SomeChanges")]
    partial class SomeChanges
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApi.ServiceDirectory.Service", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Advance")
                        .HasColumnType("real");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfReservation")
                        .HasColumnType("datetime2");

                    b.Property<float>("FullPrice")
                        .HasColumnType("real");

                    b.Property<float>("LeftToPay")
                        .HasColumnType("real");

                    b.Property<string>("ServiceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ServiceProviderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ServiceProviderId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("WebApi.UserDirectory.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Role").HasValue("User");
                });

            modelBuilder.Entity("WebApi.UserDirectory.UserAdmin", b =>
                {
                    b.HasBaseType("WebApi.UserDirectory.User");

                    b.HasDiscriminator().HasValue("admin");
                });

            modelBuilder.Entity("WebApi.UserDirectory.UserClient", b =>
                {
                    b.HasBaseType("WebApi.UserDirectory.User");

                    b.HasDiscriminator().HasValue("client");
                });

            modelBuilder.Entity("WebApi.ServiceDirectory.Service", b =>
                {
                    b.HasOne("WebApi.UserDirectory.UserClient", "Client")
                        .WithMany("Services")
                        .HasForeignKey("ClientId");

                    b.HasOne("WebApi.UserDirectory.UserAdmin", "CreatedBy")
                        .WithMany("CreatedServices")
                        .HasForeignKey("CreatedById");

                    b.HasOne("WebApi.UserDirectory.UserAdmin", "ServiceProvider")
                        .WithMany("OfferedServices")
                        .HasForeignKey("ServiceProviderId");
                });
#pragma warning restore 612, 618
        }
    }
}
