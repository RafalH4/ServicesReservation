// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.DataContext;

namespace WebApi.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20200810195524_newServiceModel")]
    partial class newServiceModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApi.AvaiableServiceDirectory.ItemService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DurationInMinutes")
                        .HasColumnType("int");

                    b.Property<string>("ServiceName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("WebApi.DayWorkDirectory.DayWork", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ServiceProviderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ServiceProviderId");

                    b.ToTable("DayWorks");
                });

            modelBuilder.Entity("WebApi.ServiceDirectory.Service", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfReservation")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DayWorkId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ItemServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("DayWorkId");

                    b.HasIndex("ItemServiceId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("WebApi.UserDirectory.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Role").HasValue("User");
                });

            modelBuilder.Entity("WebApi.UserDirectory.UserAdmin", b =>
                {
                    b.HasBaseType("WebApi.UserDirectory.User");

                    b.HasDiscriminator().HasValue("admin");
                });

            modelBuilder.Entity("WebApi.UserDirectory.UserClient", b =>
                {
                    b.HasBaseType("WebApi.UserDirectory.User");

                    b.HasDiscriminator().HasValue("client");
                });

            modelBuilder.Entity("WebApi.DayWorkDirectory.DayWork", b =>
                {
                    b.HasOne("WebApi.UserDirectory.UserAdmin", "ServiceProvider")
                        .WithMany("DayWorks")
                        .HasForeignKey("ServiceProviderId");
                });

            modelBuilder.Entity("WebApi.ServiceDirectory.Service", b =>
                {
                    b.HasOne("WebApi.UserDirectory.UserClient", "Client")
                        .WithMany("Services")
                        .HasForeignKey("ClientId");

                    b.HasOne("WebApi.DayWorkDirectory.DayWork", "DayWork")
                        .WithMany("Services")
                        .HasForeignKey("DayWorkId");

                    b.HasOne("WebApi.AvaiableServiceDirectory.ItemService", "ItemService")
                        .WithMany()
                        .HasForeignKey("ItemServiceId");
                });
#pragma warning restore 612, 618
        }
    }
}
